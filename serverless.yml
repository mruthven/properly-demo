org: mruthven
app: properly-demo
service: properly-demo

frameworkVersion: '2'

custom:
  tableName: 'users-table-${self:provider.stage}'
  propTableName: 'property-table-${self:provider.stage}'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: '20201221'
  stage: dev
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ UsersTable, Arn ]
            - Fn::GetAtt: [ PropertyTable, Arn ]
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
          Resource:
            - Fn::Join: [ "", [ Fn::GetAtt: [ PropertyTable, Arn ], "/index/*" ] ]
  environment:
    USERS_TABLE: ${self:custom.tableName}
    PROPERTY_TABLE: ${self:custom.propTableName}

functions:
  api:
    handler: handler.handler
    events:
      - http:
          path: /
          method: ANY
      - http:
          path: /{proxy+}
          method: ANY

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}
    PropertyTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: propertyId
            AttributeType: N
          - AttributeName: location
            AttributeType: S
          - AttributeName: isActive
            AttributeType: N
        KeySchema:
          - AttributeName: propertyId
            KeyType: HASH
          - AttributeName: location
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: propertyIsActive
            KeySchema:
            - AttributeName: isActive
              KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.propTableName}
